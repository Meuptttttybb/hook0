# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
variables:
  PG_VERSION: '14'
  RUST_VERSION: '1.65'
  NODE_VERSION: '18'
  POSTGRES_DB: hook0-ci
  POSTGRES_USER: runner
  POSTGRES_PASSWORD: ''
  POSTGRES_HOST_AUTH_METHOD: trust
stages:
- build
- test
- release
- documentation
rust.check:
  stage: test
  image: rust:$RUST_VERSION
  only:
    changes:
    - api/**/*
    - output-worker/**/*
    - sentry-integration/**/*
    - clients/rust/**/*
    - Cargo.*
  variables:
    SQLX_OFFLINE: 'true'
  services:
  - postgres:$PG_VERSION
  before_script:
  - rustc --version && cargo --version
  - rustup component add clippy
  - rustup component add rustfmt
  script:
  - cargo fmt --all -- --check
  - pushd sentry-integration
  - cargo clippy --all-targets --all-features -- -D warnings
  - cargo test
  - popd
  - pushd clients/rust
  - cargo clippy --all-targets --all-features -- -D warnings
  - cargo test
  - popd
  - pushd api
  - cargo clippy --all-targets --all-features -- -D warnings
  - cargo test
  - popd
  - pushd output-worker
  - cargo clippy --all-targets --all-features -- -D warnings
  - cargo test
  - popd
include:
- local: frontend/.gitlab-ci.yml
- local: website/.gitlab-ci.yml
- local: api/.gitlab-ci.yml
- template: Security/SAST.gitlab-ci.yml
sast:
  stage: test
